Göteborg Bit Factory                                                  June 2013

                        Writing a Client for Task Server
                                   Version 1


Status of this Memo

   This document provides information for the Internet community.  It does not
   specify an Internet standard of any kind.  Distribution of this document is
   not restricted.


Copyright Notice

   Copyright (C) 2010 - 2013, Göteborg Bit Factory.


Abstract

   A Task Server client is a todo-list manager.  It may be as simple as a
   program that captures a single task, as complex as Taskwarrior, or anything
   in between.  It can be a mobile client, a web application, or any other type
   of program.

   This document describes how such a client would interact with the server.


Table of Contents

   1      Introduction
   1.1    Requirements
   2      Configuration
   3      Local Changes
   4      Sync Message
   5      Remote Changes
   6      Server Messages
   7      Errors
   8      Data Integrity
   9      Reference Implementation
   10     References
   11     Acknowledgements
   12     Authors' Addresses
   13     Full Copyright Statement


1  Introduction

   A client will store, manipulate and show tasks locally.  If local changes
   accumulate, then there becomes a need to sync with the server.  There may
   also be a need to sync with the server if changes were made on other devices.

   A client will need to be configured so it can communicate with a server,
   authenticate itself, and sync.


1.1  Requirements

   In this document, we adopt the convention discussed in Section 1.3.2 of
   [RFC1122] of using the capitalized words MUST, REQUIRED, SHOULD, RECOMMENDED,
   MAY, and OPTIONAL to define the significance of each particular requirement
   specified in this document.

   In brief: "MUST" (or "REQUIRED") means that the item is an absolute
   requirement of the specification; "SHOULD" (or "RECOMMENDED") means there may
   exist valid reasons for ignoring this item, but the full implications should
   be understood before doing so; and "MAY" (or "OPTIONAL") means that this item
   is optional, and may be omitted without careful consideration.


2  Configuration

   A client will need the following configuration data:

      - Server address and port (i.e. 'tasktools.org:6544', or
        '97.107.141.107:6544')
      - Organization name (i.e. 'Public')
      - User name (i.e. 'John D')
      - Password generated by server (i.e. 1b89dd01-7a33-4890-815f-1f87f090cbe8)
      - A PKI key generated by the server

   The server address and port are used for connectivity.  The organization,
   name and password are used for authentication.  The key is used for
   encryption.  Both the key and the password are user-specific, and must be
   kept as shared secrets.

   All of these values must be user-modifiable.


3  Local Changes

   A client cannot assume continuous connectivіty, and should not sync on every
   update.  Instead, any local modifications should be collected until the user
   initiates a sync.  This reduces bandwidth usage and server activity.  This is
   a recommendation, not a requirement.

   Modifications should be stored as fully-formed tasks in JSON format.  When a
   sync operation is performed, this list will be cleared.


4  Sync Message


5  Remote Changes


6  Server Messages

   There are cases when the server needs to inform the user of some condition.
   This may be anticipated server downtime, for example.  If such a message is
   returned by the server, it SHOULD be made available to the user.  This is a
   recommendation, not a requirement.


7  Errors


8  Data Integrity

   Although a task is guaranteed to contain 'entry', 'description' and 'uuid'
   attributes, it may also contain user-defined fields.  An example might be an
   attribute named 'estimate'.

   If a task is received via sync that contains an attribute named 'estimate',
   then a client has the responsibility of preserving the attribute intact.  If
   that data is shown, then it is assumed to be of type 'string', which is the
   format used by JSON for all values.

   Conversely, if a client wishes to add a custom attribute, it is guaranteed
   that the server and other clients will preserve that attribute.

   Using this rule, two clients of differing capabilities can exchange data and
   still maintain custom attributes.

   This is a requirement.  Any client that does not obey this requirement is
   broken.


9  Reference Implementation

   The Taskwarrior codebase, version 2.3.0+, is the reference implementation.


10  References
 
   [RFC640] Postel, J., "Revised FTP Reply Codes", RFC 640, June,
        1975.

   [RFC1122] IETF, "Requirements for Internet Hosts - Communication
        Layers", October 1989.


11  Acknowledgements

   Thanks to ... for testing and feedback.

   Thanks to ... whose comments helped improve this document.


12  Authors' Addresses

   Federico Hernandez
   Email: fredde@yootabory.org

   Paul Beckingham
   Email: paul@yootabory.org


13  Full Copyright Statement

   Copyright 2010 - 2013, Göteborg Bit Factory.
   All rights reserved.

   This document and translations of it may be copied and furnished to others,
   and derivative works that comment on or otherwise explain it or assist in its
   implmentation may be prepared, copied, published and distributed, in whole or
   in part, without restriction of any kind, provided that the above copyright
   notice and this paragraph are included on all such copies and derivative
   works.  However, this document itself may not be modified in any way, such as
   by removing the copyright notice or by ommission of certain sections.

   The limited permissions granted above are perpetual and will not be revoked
   by the authors or their successors or assigns.

   This document and the information contained herein is provided on an "AS IS"
   basis and the authors disclaim all warranties, express or implied, including
   but not limited to any warranty that the use of the information herein will
   not infringe any rights or any implied warranties of merchantability or
   fitness for a particular purpose.

---

